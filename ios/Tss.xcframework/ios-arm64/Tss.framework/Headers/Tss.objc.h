// Objective-C API for talking to github.com/BoldBitcoinWallet/BBMTLib/tss Go package.
//   gobind -lang=objc github.com/BoldBitcoinWallet/BBMTLib/tss
//
// File is generated by gobind. Do not edit.

#ifndef __Tss_H__
#define __Tss_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class TssFeeResponse;
@class TssKeygenRequest;
@class TssKeygenResponse;
@class TssKeysignRequest;
@class TssKeysignResponse;
@class TssLocalState;
@class TssLocalStateAccessorImp;
@class TssMessage;
@class TssMessageFromTss;
@class TssMessengerImp;
@class TssServiceImpl;
@class TssSession;
@class TssStatus;
@class TssUTXO;
@protocol TssGoLogListener;
@class TssGoLogListener;
@protocol TssHookListener;
@class TssHookListener;
@protocol TssLocalStateAccessor;
@class TssLocalStateAccessor;
@protocol TssMessenger;
@class TssMessenger;
@protocol TssService;
@class TssService;

@protocol TssGoLogListener <NSObject>
- (void)onGoLog:(NSString* _Nullable)message;
@end

@protocol TssHookListener <NSObject>
- (void)onMessage:(NSString* _Nullable)message;
@end

@protocol TssLocalStateAccessor <NSObject>
- (NSString* _Nonnull)getLocalState:(NSString* _Nullable)pubKey error:(NSError* _Nullable* _Nullable)error;
- (BOOL)saveLocalState:(NSString* _Nullable)pubkey localState:(NSString* _Nullable)localState error:(NSError* _Nullable* _Nullable)error;
@end

@protocol TssMessenger <NSObject>
- (BOOL)send:(NSString* _Nullable)from to:(NSString* _Nullable)to body:(NSString* _Nullable)body error:(NSError* _Nullable* _Nullable)error;
@end

@protocol TssService <NSObject>
- (BOOL)applyData:(NSString* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
- (TssKeygenResponse* _Nullable)keygenECDSA:(TssKeygenRequest* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
- (TssKeysignResponse* _Nullable)keysignECDSA:(TssKeysignRequest* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
@end

@interface TssFeeResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long fastestFee;
@property (nonatomic) long halfHourFee;
@property (nonatomic) long hourFee;
@property (nonatomic) long economyFee;
@property (nonatomic) long minimumFee;
@end

@interface TssKeygenRequest : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull localPartyID;
@property (nonatomic) NSString* _Nonnull allParties;
@property (nonatomic) NSString* _Nonnull chainCodeHex;
// skipped method KeygenRequest.GetAllParties with unsupported parameter or return types

@end

@interface TssKeygenResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull pubKey;
@end

@interface TssKeysignRequest : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull pubKey;
@property (nonatomic) NSString* _Nonnull messageToSign;
@property (nonatomic) NSString* _Nonnull keysignCommitteeKeys;
@property (nonatomic) NSString* _Nonnull localPartyKey;
@property (nonatomic) NSString* _Nonnull derivePath;
// skipped method KeysignRequest.GetKeysignCommitteeKeys with unsupported parameter or return types

@end

@interface TssKeysignResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull msg;
@property (nonatomic) NSString* _Nonnull msgHex;
@property (nonatomic) NSString* _Nonnull r;
@property (nonatomic) NSString* _Nonnull s;
@property (nonatomic) NSString* _Nonnull derSignature;
@property (nonatomic) NSString* _Nonnull recoveryID;
@end

@interface TssLocalState : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull pubKey;
// skipped field LocalState.ECDSALocalData with unsupported type: github.com/bnb-chain/tss-lib/v2/ecdsa/keygen.LocalPartySaveData

// skipped field LocalState.KeygenCommitteeKeys with unsupported type: []string

@property (nonatomic) NSString* _Nonnull localPartyKey;
@property (nonatomic) NSString* _Nonnull chainCodeHex;
@property (nonatomic) NSString* _Nonnull resharePrefix;
@end

@interface TssLocalStateAccessorImp : NSObject <goSeqRefInterface, TssLocalStateAccessor> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (NSString* _Nonnull)getLocalState:(NSString* _Nullable)keyshare error:(NSError* _Nullable* _Nullable)error;
- (BOOL)saveLocalState:(NSString* _Nullable)pubKey localState:(NSString* _Nullable)localState error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Message structure
 */
@interface TssMessage : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull sessionID;
@property (nonatomic) NSString* _Nonnull from;
// skipped field Message.To with unsupported type: []string

@property (nonatomic) NSString* _Nonnull body;
@property (nonatomic) NSString* _Nonnull seqNo;
@property (nonatomic) NSString* _Nonnull hash;
@end

@interface TssMessageFromTss : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable wireBytes;
@property (nonatomic) NSString* _Nonnull from;
@property (nonatomic) NSString* _Nonnull to;
@property (nonatomic) BOOL isBroadcast;
@end

@interface TssMessengerImp : NSObject <goSeqRefInterface, TssMessenger> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull server;
@property (nonatomic) NSString* _Nonnull sessionID;
@property (nonatomic) NSString* _Nonnull sessionKey;
// skipped field MessengerImp.Mutex with unsupported type: sync.Mutex

- (BOOL)send:(NSString* _Nullable)from to:(NSString* _Nullable)to body:(NSString* _Nullable)body error:(NSError* _Nullable* _Nullable)error;
@end

@interface TssServiceImpl : NSObject <goSeqRefInterface, TssService> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (BOOL)applyData:(NSString* _Nullable)msg error:(NSError* _Nullable* _Nullable)error;
- (TssKeygenResponse* _Nullable)keygenECDSA:(TssKeygenRequest* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
- (TssKeysignResponse* _Nullable)keysignECDSA:(TssKeysignRequest* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Session structure
 */
@interface TssSession : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull sessionID;
// skipped field Session.Participants with unsupported type: []string

@end

@interface TssStatus : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long step;
@property (nonatomic) long seqNo;
@property (nonatomic) long index;
@property (nonatomic) NSString* _Nonnull info;
@property (nonatomic) NSString* _Nonnull type;
@property (nonatomic) BOOL done;
@property (nonatomic) long time;
@end

/**
 * UTXO represents an unspent transaction output
 */
@interface TssUTXO : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull txID;
// skipped field UTXO.Vout with unsupported type: uint32

@property (nonatomic) int64_t value;
@end

// skipped const MaxUint32 with unsupported type: uint32


FOUNDATION_EXPORT NSString* _Nonnull TssAesDecrypt(NSString* _Nullable encryptedData, NSString* _Nullable key, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssAesEncrypt(NSString* _Nullable data, NSString* _Nullable key, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void TssClearSessionLog(NSString* _Nullable session);

// skipped function Contains with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull TssConvertPubKeyToBTCAddress(NSString* _Nullable pubKeyCompressed, NSString* _Nullable mainnetORtestnet3, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssDecodeAddress(NSString* _Nullable address, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void TssDisableLogs(void);

FOUNDATION_EXPORT NSString* _Nonnull TssDiscoverPeer(NSString* _Nullable id_, NSString* _Nullable pubkey, NSString* _Nullable localIP, NSString* _Nullable remoteIP, NSString* _Nullable port, NSString* _Nullable timeout, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssEciesDecrypt(NSString* _Nullable encryptedData, NSString* _Nullable privateKeyHex, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssEciesEncrypt(NSString* _Nullable data, NSString* _Nullable publicKeyHex, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssFetchData(NSString* _Nullable url, NSString* _Nullable decKey, NSString* _Nullable data, NSError* _Nullable* _Nullable error);

// skipped function FetchUTXODetails with unsupported parameter or return types


// skipped function FetchUTXOs with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull TssGenerateKeyPair(NSError* _Nullable* _Nullable error);

// skipped function GetDERSignature with unsupported parameter or return types


// skipped function GetDerivePathBytes with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull TssGetDerivedPubKey(NSString* _Nullable hexPubKey, NSString* _Nullable hexChainCode, NSString* _Nullable path, BOOL isEdDSA, NSError* _Nullable* _Nullable error);

// skipped function GetHexEncodedPubKey with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull TssGetNetwork(NSError* _Nullable* _Nullable error);

/**
 * GetThreshold calculates the threshold value based on the input value.
It takes an integer value as input and returns the threshold value and an error.
If the input value is negative, it returns an error with the message "invalid input".
 */
FOUNDATION_EXPORT BOOL TssGetThreshold(long value, long* _Nullable ret0_, NSError* _Nullable* _Nullable error);

// skipped function HashToInt with unsupported parameter or return types


FOUNDATION_EXPORT void TssHook(NSString* _Nullable message);

FOUNDATION_EXPORT void TssInitLog(void);

FOUNDATION_EXPORT NSString* _Nonnull TssJoinKeygen(NSString* _Nullable ppmPath, NSString* _Nullable key, NSString* _Nullable partiesCSV, NSString* _Nullable encKey, NSString* _Nullable decKey, NSString* _Nullable session, NSString* _Nullable server, NSString* _Nullable chaincode, NSString* _Nullable sessionKey, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssJoinKeysign(NSString* _Nullable server, NSString* _Nullable key, NSString* _Nullable partiesCSV, NSString* _Nullable session, NSString* _Nullable sessionKey, NSString* _Nullable encKey, NSString* _Nullable decKey, NSString* _Nullable keyshare, NSString* _Nullable derivePath, NSString* _Nullable message, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssListenForPeer(NSString* _Nullable id_, NSString* _Nullable pubkey, NSString* _Nullable port, NSString* _Nullable timeout, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL TssLocalPreParams(NSString* _Nullable ppmFile, long timeoutMinutes, BOOL* _Nullable ret0_, NSError* _Nullable* _Nullable error);

// skipped function Logf with unsupported parameter or return types


// skipped function Logln with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull TssMpcSendBTC(NSString* _Nullable server, NSString* _Nullable key, NSString* _Nullable partiesCSV, NSString* _Nullable session, NSString* _Nullable sessionKey, NSString* _Nullable encKey, NSString* _Nullable decKey, NSString* _Nullable keyshare, NSString* _Nullable derivePath, NSString* _Nullable publicKey, NSString* _Nullable senderAddress, NSString* _Nullable receiverAddress, int64_t amountSatoshi, int64_t estimatedFee, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT TssServiceImpl* _Nullable TssNewService(id<TssMessenger> _Nullable msg, id<TssLocalStateAccessor> _Nullable stateAccessor, BOOL createPreParam, NSString* _Nullable ppmFile, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssPostTx(NSString* _Nullable rawTxHex, NSError* _Nullable* _Nullable error);

// skipped function PreParams with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull TssPublishData(NSString* _Nullable port, NSString* _Nullable timeout, NSString* _Nullable enckey, NSString* _Nullable data, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL TssRecommendedFees(NSString* _Nullable feeType, long* _Nullable ret0_, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssRunRelay(NSString* _Nullable port, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssSecP256k1Recover(NSString* _Nullable r, NSString* _Nullable s, NSString* _Nullable v, NSString* _Nullable h, NSError* _Nullable* _Nullable error);

// skipped function SelectUTXOs with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull TssSendBitcoin(NSString* _Nullable wifKey, NSString* _Nullable publicKey, NSString* _Nullable senderAddress, NSString* _Nullable receiverAddress, int64_t preview, int64_t amountSatoshi, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssSessionLog(NSString* _Nullable session);

FOUNDATION_EXPORT NSString* _Nonnull TssSessionState(NSString* _Nullable session);

/**
 * SetEventListener sets the listener for UTXO events
 */
FOUNDATION_EXPORT void TssSetEventListener(id<TssGoLogListener> _Nullable l);

FOUNDATION_EXPORT void TssSetHookListener(id<TssHookListener> _Nullable h);

FOUNDATION_EXPORT NSString* _Nonnull TssSetNetwork(NSString* _Nullable network, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssSha256(NSString* _Nullable msg, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssStopRelay(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssTotalUTXO(NSString* _Nullable address, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssUseAPI(NSString* _Nullable network, NSString* _Nullable base, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull TssUseFeePolicy(NSString* _Nullable feeType, NSError* _Nullable* _Nullable error);

@class TssGoLogListener;

@class TssHookListener;

@class TssLocalStateAccessor;

@class TssMessenger;

@class TssService;

@interface TssGoLogListener : NSObject <goSeqRefInterface, TssGoLogListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onGoLog:(NSString* _Nullable)message;
@end

@interface TssHookListener : NSObject <goSeqRefInterface, TssHookListener> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onMessage:(NSString* _Nullable)message;
@end

@interface TssLocalStateAccessor : NSObject <goSeqRefInterface, TssLocalStateAccessor> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSString* _Nonnull)getLocalState:(NSString* _Nullable)pubKey error:(NSError* _Nullable* _Nullable)error;
- (BOOL)saveLocalState:(NSString* _Nullable)pubkey localState:(NSString* _Nullable)localState error:(NSError* _Nullable* _Nullable)error;
@end

@interface TssMessenger : NSObject <goSeqRefInterface, TssMessenger> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)send:(NSString* _Nullable)from to:(NSString* _Nullable)to body:(NSString* _Nullable)body error:(NSError* _Nullable* _Nullable)error;
@end

@interface TssService : NSObject <goSeqRefInterface, TssService> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)applyData:(NSString* _Nullable)p0 error:(NSError* _Nullable* _Nullable)error;
- (TssKeygenResponse* _Nullable)keygenECDSA:(TssKeygenRequest* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
- (TssKeysignResponse* _Nullable)keysignECDSA:(TssKeysignRequest* _Nullable)req error:(NSError* _Nullable* _Nullable)error;
@end

#endif
